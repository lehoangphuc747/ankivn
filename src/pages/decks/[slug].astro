---
import DeckLayoutEnhanced from '@/layouts/DeckLayoutEnhanced.astro';
import DownloadButton from '@/components/decks/DownloadButton.astro';
import { getCollection } from 'astro:content';

// 1. CHUYỂN SANG CHẾ ĐỘNG (SSR)
export const prerender = false;

export async function getStaticPaths() {
  return (await getCollection('decks')).map((d) => ({ params: { slug: d.slug } }));
}

const { slug } = Astro.params;
const deck = (await getCollection('decks')).find((d) => d.slug === slug);
if (!deck) throw new Error('Deck not found');

// 2. LẤY CONTENT (ĐỂ SỬA LỖI "Content is not defined")
const { Content } = await deck.render();

// 3. FUNCTION ĐỂ GỌI WORKER LẤY VIEW
async function fetchViewCount(slug: string): Promise<number> {
  try {
    const response = await fetch(`https://view-counter.lphc664.workers.dev/decks/${slug}`, {
      method: 'POST', // Changed from 'GET' to 'POST' to increment view count
      headers: { 'Content-Type': 'application/json' }
    });
    if (response.ok) {
      const data = await response.json();
      return data.views || 0;
    }
    return 0;
  } catch (error) {
    console.error(`Error fetching view count for ${slug}:`, error);
    return 0;
  }
}

// 4. GỌI HÀM VÀ LẤY VIEW COUNT
const viewCount = await fetchViewCount(slug);
---

<DeckLayoutEnhanced 
  title={deck.data.title} 
  date={deck.data.date} 
  cover={deck.data.cover}
  category={deck.data.category}
  subCategory={deck.data.subCategory}
  size={deck.data.size}
  tags={deck.data.tags}
  author={deck.data.author}
  authorLink={deck.data.authorLink}
  previewImages={deck.data.previewImages}
  viewCount={viewCount}
>
  <Content />
  
  <Fragment slot="actions">
    <DownloadButton downloads={deck.data.downloads} />
  </Fragment>
</DeckLayoutEnhanced>
