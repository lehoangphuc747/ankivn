---
import SimpleLessonLayout from '@/layouts/SimpleLessonLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const guides = await getCollection('guides');
  return guides.map((g) => ({ params: { slug: g.slug } }));
}

const { slug } = Astro.params;
const allGuides = await getCollection('guides');
const guide = allGuides.find((g) => g.slug === slug);
if (!guide) throw new Error('Guide not found');

// Find prev/next lessons based on slug order (alphabetical or custom order)
const currentIndex = allGuides.findIndex(g => g.slug === slug);
const prevLesson = currentIndex > 0 ? allGuides[currentIndex - 1] : null;
const nextLesson = currentIndex < allGuides.length - 1 ? allGuides[currentIndex + 1] : null;

const { Content } = await guide.render();
---

<SimpleLessonLayout 
  title={guide.data.title}
  description={guide.data.description}
  author={guide.data.author}
  date={guide.data.publishDate}
  duration={guide.data.duration}
  level={guide.data.level}
  tags={guide.data.tags}
  prevLesson={prevLesson ? { title: prevLesson.data.title, slug: prevLesson.slug } : undefined}
  nextLesson={nextLesson ? { title: nextLesson.data.title, slug: nextLesson.slug } : undefined}
>
  <Content />
</SimpleLessonLayout>
