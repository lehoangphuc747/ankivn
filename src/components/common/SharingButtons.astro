---
interface Props {
  url: string;
  title: string;
  description?: string;
  shareTitle?: string;
}

const { url, title, description = '', shareTitle = 'Chia sẻ bộ thẻ' } = Astro.props;

// Encode for URLs
const encodedUrl = encodeURIComponent(url);
const encodedTitle = encodeURIComponent(title);
const encodedDescription = encodeURIComponent(description);

// Social sharing URLs
const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}&quote=${encodedTitle}`;
const messengerUrl = `https://www.facebook.com/dialog/send?link=${encodedUrl}&app_id=YOUR_APP_ID`;

// Generate share text
const shareText = `${title}\n\n${description}\n\n${url}`;
---

<div class="bg-white rounded-2xl p-6 border border-gray-200 shadow-lg sharing-buttons-container">
  <div class="flex items-center mb-4" style="gap: 1rem;">
    <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-xl flex items-center justify-center">
      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
      </svg>
    </div>
    <div>
      <div class="text-lg font-bold text-gray-900">{shareTitle}</div>
      <div class="text-sm text-gray-600">Chia sẻ với bạn bè để cùng học tập</div>
    </div>
  </div>

  <div class="grid grid-cols-1 sm:grid-cols-3" style="gap: 1rem;">
    
    <!-- Facebook Share -->
    <a 
      href={facebookUrl}
      target="_blank"
      rel="noopener noreferrer"
      class="flex items-center justify-center px-4 py-3 !text-white rounded-full transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105 active:scale-95 cursor-pointer group bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 !no-underline"
      style="gap: 1rem;"
    >
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
        <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
      </svg>
      <span class="font-semibold">Facebook</span>
      <svg class="w-4 h-4 group-hover:translate-x-0.5 transition-transform text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
      </svg>
    </a>

    <!-- Messenger Share -->
    <a 
      href={messengerUrl}
      target="_blank"
      rel="noopener noreferrer"
      class="flex items-center justify-center px-4 py-3 !text-white rounded-full transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105 active:scale-95 cursor-pointer group bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 !no-underline"
      style="gap: 1rem;"
    >
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
        <path d="M12 0C5.373 0 0 4.975 0 11.111c0 3.497 1.745 6.616 4.472 8.652V24l4.086-2.242c1.09.301 2.246.464 3.442.464 6.627 0 12-4.974 12-11.111C24 4.975 18.627 0 12 0zm1.191 14.963l-3.055-3.26-5.963 3.26L10.732 8.1l3.13 3.26L19.794 8.1l-6.603 6.863z"/>
      </svg>
      <span class="font-semibold">Messenger</span>
      <svg class="w-4 h-4 group-hover:translate-x-0.5 transition-transform text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
      </svg>
    </a>

    <!-- Copy Link -->
    <button 
      id="copy-link-btn"
      class="flex items-center justify-center px-4 py-3 !text-white rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105 active:scale-95 cursor-pointer group bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800"
      style="gap: 1rem;"
      data-url={url}
      data-text={shareText}
    >
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
      </svg>
      <span class="font-semibold copy-text">Copy Link</span>
      <svg class="w-4 h-4 group-hover:scale-110 transition-transform text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </button>
  </div>

  <!-- Success message -->
  <div id="copy-success" class="hidden mt-3 p-3 bg-green-50 border border-green-200 rounded-lg">
    <div class="flex items-center text-green-800" style="gap: 1rem;">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
      <span class="text-sm font-medium">Đã sao chép link thành công!</span>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const copyBtn = document.getElementById('copy-link-btn');
    const successMsg = document.getElementById('copy-success');
    const copyText = copyBtn?.querySelector('.copy-text');

    copyBtn?.addEventListener('click', async function() {
      const url = this.getAttribute('data-url');

      try {
        // Try using the modern Clipboard API first
        if (navigator.clipboard && navigator.clipboard.writeText) {
          await navigator.clipboard.writeText(url);
        } else {
          // Fallback for older browsers
          const textArea = document.createElement('textarea');
          textArea.value = url;
          textArea.style.position = 'fixed';
          textArea.style.left = '-9999px';
          document.body.appendChild(textArea);
          textArea.select();
          document.execCommand('copy');
          document.body.removeChild(textArea);
        }

        // Show success message
        if (copyText) copyText.textContent = 'Đã sao chép!';
        successMsg?.classList.remove('hidden');

        // Reset after 3 seconds
        setTimeout(() => {
          if (copyText) copyText.textContent = 'Copy Link';
          successMsg?.classList.add('hidden');
        }, 3000);

      } catch (err) {
        console.error('Failed to copy:', err);
        if (copyText) copyText.textContent = 'Lỗi sao chép';
        setTimeout(() => {
          if (copyText) copyText.textContent = 'Copy Link';
        }, 2000);
      }
    });
  });
</script>

<style>
  /* Complete CSS isolation for SharingButtons */
  .sharing-buttons-container :global(a) {
    color: white !important;
    text-decoration: none !important;
  }
  
  .sharing-buttons-container :global(a:hover) {
    color: white !important;
    text-decoration: none !important;
  }
  
  .sharing-buttons-container :global(a:focus) {
    color: white !important;
    text-decoration: none !important;
  }
  
  .sharing-buttons-container :global(svg) {
    color: white !important;
    stroke: white !important;
  }
</style>
