---
import Tooltip from './Tooltip.astro';

const { shareUrl } = Astro.props as {
  shareUrl?: string;
};
---

<!-- Mobile Quick Actions - Only visible on mobile -->
<div class="fixed bottom-6 left-6 z-40 lg:hidden">
  <div class="flex flex-col gap-3">
    <!-- Main Action Button -->
    <Tooltip text="Quick actions" position="right">
      <button 
        id="quick-actions-toggle"
        class="w-14 h-14 bg-gradient-to-r from-blue-500 to-emerald-500 text-white rounded-full shadow-2xl flex items-center justify-center transition-all duration-300 hover:scale-110"
        aria-label="Quick actions menu"
      >
        <svg class="w-6 h-6 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
        </svg>
      </button>
    </Tooltip>

    <!-- Action Menu -->
    <div id="quick-actions-menu" class="flex flex-col gap-2 opacity-0 invisible transform translate-y-4 transition-all duration-300">
      <!-- Share Button -->
      {shareUrl && (
        <Tooltip text="Chia sẻ deck" position="right">
          <button 
            onclick={`(async () => {
              try { 
                await navigator.clipboard.writeText('${shareUrl}'); 
                alert('Đã copy link chia sẻ!');
              } catch {
                alert('Không thể copy: ${shareUrl}');
              }
            })()`}
            class="w-12 h-12 bg-blue-500 text-white rounded-full shadow-lg flex items-center justify-center hover:bg-blue-600 transition-colors"
            aria-label="Chia sẻ"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
            </svg>
          </button>
        </Tooltip>
      )}

      <!-- Back to Top -->
      <Tooltip text="Lên đầu trang" position="right">
        <button 
          onclick="window.scrollTo({ top: 0, behavior: 'smooth' })"
          class="w-12 h-12 bg-purple-500 text-white rounded-full shadow-lg flex items-center justify-center hover:bg-purple-600 transition-colors"
          aria-label="Lên đầu trang"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
          </svg>
        </button>
      </Tooltip>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggle = document.getElementById('quick-actions-toggle');
    const menu = document.getElementById('quick-actions-menu');
    const icon = toggle?.querySelector('svg');
    
    if (!toggle || !menu || !icon) return;

    let isOpen = false;

    const toggleMenu = () => {
      isOpen = !isOpen;
      
      if (isOpen) {
        menu.classList.remove('opacity-0', 'invisible', 'translate-y-4');
        menu.classList.add('opacity-100', 'visible', 'translate-y-0');
        icon.style.transform = 'rotate(45deg)';
        toggle.setAttribute('aria-expanded', 'true');
      } else {
        menu.classList.add('opacity-0', 'invisible', 'translate-y-4');
        menu.classList.remove('opacity-100', 'visible', 'translate-y-0');
        icon.style.transform = 'rotate(0deg)';
        toggle.setAttribute('aria-expanded', 'false');
      }
    };

    toggle.addEventListener('click', toggleMenu);

    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      if (isOpen && !toggle.contains(e.target) && !menu.contains(e.target)) {
        toggleMenu();
      }
    });

    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isOpen) {
        toggleMenu();
      }
    });
  });
</script>
