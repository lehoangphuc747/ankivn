﻿---
interface Props {
  title: string;
  cover?: string;
  date?: string;
  category?: string;
  subCategory?: string;
  href: string;
  tags?: string[];
  type?: 'BÁN' | 'CHIA SẺ';
}

const { title, cover, date, category, subCategory, href, tags = [], type } = Astro.props;
const slug = href.split('/').pop();
const displayCover = cover ?? '/default-thumbnail.webp';
---

<style>
  .deck-title {
    font-size: 17px; /* Có thể điều chỉnh font size ở đây: 12px, 14px, 16px, 18px, 20px, 22px, 24px, etc. */
    font-weight: 700;
    line-height: 1.4;
    color: rgb(17 24 39); /* text-gray-900 */
    margin-bottom: 0.75rem;
    padding-left: 0;
    padding-right: 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: color 200ms;
    word-wrap: break-word;
    hyphens: auto;
    min-height: 4.5rem;
  }
</style>

<style>
  .deck-card-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
  }
</style>

<article class="group relative bg-white/80 backdrop-blur-sm rounded-3xl border-2 border-gray-200/60 overflow-hidden hover:border-blue-300/40 transition-all duration-200">
  <a href={href} target="_blank" rel="noopener noreferrer" class="block">
    <!-- Cover Image with Overlay -->
    <div class="relative aspect-video bg-gradient-to-br from-blue-50 to-emerald-50 overflow-hidden">
      <img
        src={displayCover}
        alt={title}
        loading="lazy"
        decoding="async"
        fetchpriority="low"
        class="w-full h-full object-cover transition-transform duration-200 ease-out"
      />

      <!-- Gradient overlay on hover -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/10 via-transparent to-transparent opacity-0 transition-opacity duration-150"></div>

      <!-- Type Badge -->
      {type === 'BÁN' && (
        <div class="deck-card-badge">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold text-white bg-gradient-to-r from-red-500 to-orange-500 shadow-lg">BÁN</span>
        </div>
      )}
    </div>

    <!-- Content -->
    <div class="p-6">
      <!-- Categories -->
      {(category || subCategory) && (
        <div class="mb-3 flex flex-wrap gap-2">
          {category && (
            <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-gray-100 text-gray-800">
              {category}
            </span>
          )}
          {subCategory && (
            <span class="text-xs font-medium text-blue-600 bg-blue-50 px-2 py-1 rounded-md">
              {subCategory}
            </span>
          )}
        </div>
      )}

      <!-- Title - Có thể điều chỉnh font size theo ý muốn: text-xs, text-sm, text-base, text-lg, text-xl, etc. -->
      <div class="deck-title">
        {title}
      </div>

      <!-- Tags -->
      {tags.length > 0 && (
        <div class="flex flex-wrap gap-1 mb-4">
          {tags.slice(0, 3).map(tag => (
            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs bg-gray-100 text-gray-600 transition-colors">
              #{tag}
            </span>
          ))}
          {tags.length > 3 && (
            <span class="text-xs text-gray-400 px-2 py-1">+{tags.length - 3} khác</span>
          )}
        </div>
      )}
    </div>
  </a>
</article>
