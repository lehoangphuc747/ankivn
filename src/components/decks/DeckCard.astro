---
interface Props {
  title: string;
  cover?: string;
  date?: string;
  category?: string;
  subCategory?: string;
  href: string;
  tags?: string[];
}

const { title, cover, date, category, subCategory, href, tags = [] } = Astro.props;
const slug = href.split('/').pop();
const displayCover = cover ?? '/default-thumbnail.webp';
---

<article class="group relative bg-white/80 backdrop-blur-sm rounded-3xl border border-white/20 overflow-hidden hover:shadow-2xl hover:border-white/40 transition-all duration-500 hover:-translate-y-2">
  <a href={href} target="_blank" rel="noopener noreferrer" class="block">
    <!-- Cover Image with Overlay -->
    <div class="relative aspect-video bg-gradient-to-br from-blue-50 to-emerald-50 overflow-hidden">
      <img 
        src={displayCover} 
        alt={title}
        loading="lazy"
        decoding="async"
        fetchpriority="low"
        class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
      />
      
      <!-- Gradient overlay on hover -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      
      <!-- Category Badge (floating) -->
      {category && (
        <div class="absolute top-3 left-3">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-white/90 backdrop-blur-sm text-gray-800 shadow-lg">
            {category}
          </span>
        </div>
      )}
    </div>

    <!-- Content -->
    <div class="p-6">
      <!-- Sub-category -->
      {subCategory && (
        <div class="mb-3">
          <span class="text-xs font-medium text-blue-600 bg-blue-50 px-2 py-1 rounded-md">
            {subCategory}
          </span>
        </div>
      )}

      <!-- Title -->
      <h3 class="font-bold text-lg text-gray-900 mb-3 line-clamp-3 group-hover:text-blue-600 transition-colors duration-300 leading-tight break-words hyphens-auto min-h-[4.5rem]">
        {title}
      </h3>

      <!-- Date -->
      {date && (
        <div class="flex items-center gap-2 text-sm text-gray-500 mb-4">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          <span>{new Date(date).toLocaleDateString('vi-VN')}</span>
        </div>
      )}

      <!-- Tags -->
      {tags.length > 0 && (
        <div class="flex flex-wrap gap-1 mb-4">
          {tags.slice(0, 3).map(tag => (
            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs bg-gray-100 text-gray-600 hover:bg-gray-200 transition-colors">
              #{tag}
            </span>
          ))}
          {tags.length > 3 && (
            <span class="text-xs text-gray-400 px-2 py-1">+{tags.length - 3} khác</span>
          )}
        </div>
      )}

      <!-- CTA Button -->
      <div class="flex items-center justify-between">
        <span class="text-sm font-medium text-gray-600 group-hover:text-blue-600 transition-colors">
          Xem chi tiết
        </span>
        <div class="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center group-hover:bg-blue-500 group-hover:text-white transition-all duration-300 group-hover:scale-110">
          <svg class="w-4 h-4 transform group-hover:translate-x-0.5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </div>
      </div>
    </div>
  </a>
</article>
