---
interface Props {
  title: string;
  cover?: string;
  date?: string;
  size?: number;
  category?: string;
  subCategory?: string;
  href: string;
  tags?: string[];
}

const { title, cover, date, size, category, subCategory, href, tags = [] } = Astro.props;
const slug = href.split('/').pop();
const displayCover = cover ?? `/api/og/${slug}`;
---

<article class="group relative bg-white rounded-xl border border-gray-200 overflow-hidden hover:shadow-lg hover:border-gray-300 transition-all duration-200">
  <a href={href} class="block">
    <!-- Cover Image -->
    <div class="aspect-video bg-gradient-to-br from-blue-50 to-emerald-50 overflow-hidden">
      <img 
        src={displayCover} 
        alt={title}
        loading="lazy"
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-200"
      />
    </div>

    <!-- Content -->
    <div class="p-5">
      <!-- Category Badge -->
      {category && (
        <div class="flex items-center gap-2 mb-3">
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
            {category}
          </span>
          {subCategory && (
            <span class="text-xs text-gray-500">/ {subCategory}</span>
          )}
        </div>
      )}

      <!-- Title -->
      <h3 class="font-semibold text-gray-900 mb-2 line-clamp-2 group-hover:text-blue-600 transition-colors">
        {title}
      </h3>

      <!-- Metadata -->
      <div class="flex items-center justify-between text-sm text-gray-500 mb-3">
        <div class="flex items-center gap-4">
          {date && (
            <span class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              {new Date(date).toLocaleDateString('vi-VN')}
            </span>
          )}
          {size && (
            <span class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
              </svg>
              {size.toLocaleString()} tháº»
            </span>
          )}
        </div>
      </div>

      <!-- Tags -->
      {tags.length > 0 && (
        <div class="flex flex-wrap gap-1">
          {tags.slice(0, 3).map(tag => (
            <span class="inline-flex items-center px-2 py-1 rounded text-xs bg-gray-100 text-gray-600">
              #{tag}
            </span>
          ))}
          {tags.length > 3 && (
            <span class="text-xs text-gray-400">+{tags.length - 3}</span>
          )}
        </div>
      )}
    </div>
  </a>
</article>
