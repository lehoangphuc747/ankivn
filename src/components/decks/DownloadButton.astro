---
interface DownloadItem {
  name: string;
  url: string;
  description?: string;
  type?: 'author' | 'ankivn' | 'gdrive' | 'onedrive' | 'r2' | 'firebase' | 'other';
}

const { downloads } = Astro.props as { downloads?: DownloadItem[] };
const downloadItems = downloads ?? [];

const icons: Record<string, string> = {
  author: '👤',
  ankivn: '🎯', 
  r2: '☁️',
  gdrive: '📂',
  firebase: '🔥',
  onedrive: '📁',
  other: '🔗',
};
---
{downloadItems.length ? (
  <!-- Simplified Download Section -->
  <div class="bg-white border border-gray-200 rounded-2xl overflow-hidden shadow-sm">
    <!-- Compact Header -->
    <div class="bg-gradient-to-r from-blue-500 to-blue-600 px-4 py-3">
      <div class="text-xl font-semibold text-white flex items-center gap-2">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
        Tải xuống
      </div>
    </div>
    
    <!-- Content Section -->
    <div class="p-4">
      <!-- Simple Download Links -->
      <div class="space-y-2">
        {downloadItems.map((item) => (
          <a 
            href={item.url} 
            target="_blank" 
            rel="noopener noreferrer"
            class="download-link block bg-gray-50 hover:bg-blue-50 border border-gray-200 hover:border-blue-300 rounded-xl p-3 transition-colors duration-150"
            title={item.description}
          >
            <div class="flex items-center gap-3">
              <!-- Simple Icon -->
              <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center flex-shrink-0">
                <span class="text-lg">{icons[item.type || 'other']}</span>
              </div>
              
              <!-- Content -->
              <div class="flex-1 min-w-0">
                <div class="font-medium text-gray-900 text-sm line-clamp-1">{item.name}</div>
                {item.description && (
                  <div class="text-xs text-gray-500 line-clamp-1 mt-0.5">{item.description}</div>
                )}
              </div>
              
              <!-- Simple Arrow -->
              <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </div>
          </a>
        ))}
      </div>
    </div>
  </div>
) : (
  <!-- Simple Empty State -->
  <div class="bg-gray-50 border border-gray-200 rounded-2xl p-6 text-center">
    <div class="w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-3">
      <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
    </div>
    <h3 class="text-gray-600 font-medium text-sm mb-1">Chưa có link tải</h3>
    <p class="text-gray-500 text-xs">Vui lòng quay lại sau</p>
  </div>
)}
