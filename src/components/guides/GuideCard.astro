---
export interface Props {
  title: string;
  guideType?: string;
  cover?: string;
  tags?: string[];
  href: string;
}

const { title, guideType, cover, tags = [], href } = Astro.props;
const displayCover = cover ?? '/default-thumbnail.webp';

// Guide type colors
const typeColors = {
  'CÆ¡ báº£n': 'bg-green-100 text-green-700',
  'NÃ¢ng cao': 'bg-blue-100 text-blue-700', 
  'Tips': 'bg-purple-100 text-purple-700'
};
---

<article class="group relative bg-white/80 backdrop-blur-sm rounded-3xl border border-white/20 overflow-hidden hover:shadow-2xl hover:border-white/40 transition-all duration-500 hover:-translate-y-2">
  <a href={href} class="block">
    <!-- Cover Image -->
    <div class="aspect-video bg-gradient-to-br from-blue-50 to-emerald-50 overflow-hidden relative">
      <img 
        src={displayCover} 
        alt={title}
        loading="lazy"
        class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
      />
      
      <!-- Guide Type Badge - Floating -->
      {guideType && (
        <div class="absolute top-4 left-4">
          <span class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-bold shadow-lg backdrop-blur-sm ${typeColors[guideType] || 'bg-gray-100 text-gray-700'}`}>
            ðŸ“– {guideType}
          </span>
        </div>
      )}
      
      <!-- Gradient Overlay on Hover -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
    </div>

    <!-- Content -->
    <div class="p-6">
      <!-- Title -->
      <h3 class="font-bold text-xl text-gray-900 mb-4 line-clamp-2 group-hover:text-blue-600 transition-colors leading-tight">
        {title}
      </h3>

      <!-- Tags -->
      {tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-4">
          {tags.slice(0, 3).map(tag => (
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm bg-gray-100 text-gray-700 font-medium">
              #{tag}
            </span>
          ))}
          {tags.length > 3 && (
            <span class="text-sm text-gray-400">+{tags.length - 3}</span>
          )}
        </div>
      )}

      <!-- Read Guide Arrow -->
      <div class="flex items-center text-blue-600 font-medium">
        <span class="mr-2">Xem hÆ°á»›ng dáº«n</span>
        <svg class="w-4 h-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </div>
    </div>
  </a>
</article>
